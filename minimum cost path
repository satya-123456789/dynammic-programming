def paths_in_matrix(matrix):
    n=len(matrix)
    m=len(matrix[0])
    dp=[[0]*m for i in range(n)]
    dp[0][0]=matrix[0][0]
    for i in range(1,n):
        dp[i][0]=matrix[i][0]+dp[i-1][0]
    for j in range(1,m):
        dp[0][j]=matrix[0][j]+dp[0][j-1]
    for i in range(1,n):
        for j in range(1,m):
            dp[i][j]=matrix[i][j]+min(dp[i-1][j],dp[i][j-1])
    return dp[n-1][m-1]
res = paths_in_matrix([[3,2,12,15,10],
                       [6,12,1,11,17],
                       [8,5,12,32,21],
                       [3,20,2,9,7]])
print(res)


#expected output : 
#48
            

