def paths_in_matrix(matrix):
    n = len(matrix)
    m = len(matrix[0])
    dp = [[0]*m for _ in range(n)]
    dp[0][0] = 1 if matrix[0][0] == 0 else 0
    for i in range(1, n):
        if matrix[i][0] == 0:
            dp[i][0] = dp[i-1][0]
        else:
            dp[i][0] = 0   
    for j in range(1, m):
        if matrix[0][j] == 0:
            dp[0][j] = dp[0][j-1]
        else:
            dp[0][j] = 0  
    for i in range(1, n):
        for j in range(1, m):
            if matrix[i][j] == 0:
                dp[i][j] = dp[i-1][j] + dp[i][j-1]
            else:
                dp[i][j] = 0 
    
    return dp[n-1][m-1]
res = paths_in_matrix([[0,0,1,0,1],
                       [0,0,0,0,1],
                       [0,0,1,0,0],
                       [1,0,0,0,0]])
print(res)  
#Expected  Output: 
#7
